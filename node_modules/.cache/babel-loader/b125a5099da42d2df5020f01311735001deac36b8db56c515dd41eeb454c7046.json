{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\todo list-react\\\\client\\\\src\\\\App.js\";\nimport './styles/App.css';\nimport './styles/LoginPage.css';\nimport { Route, Routes, Link } from 'react-router-dom';\nimport { IndexPage, RegisterPage, LoginPage } from './Pages';\nimport { UserContext } from './context/UserContext';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getTokenFromLocalStorage() {\n  return localStorage.getItem('token');\n}\nconst token = getTokenFromLocalStorage();\nfunction validateToken() {\n  fetch(\"http://localhost:4000/validateToken\", {\n    method: \"POST\",\n    headers: {\n      authorization: token\n    }\n  }).then(response => {\n    if (response.Ok) {\n      return response.json();\n    } else {\n      throw new Error(\"token validation failed\");\n    }\n  }).then(data => {\n    setLogin(data.authorization);\n    setUsername(data.username);\n  });\n}\nvalidateToken();\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      login,\n      setLogin,\n      username,\n      setUsername\n    },\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(IndexPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Register\",\n        element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","Link","IndexPage","RegisterPage","LoginPage","UserContext","useState","jsxDEV","_jsxDEV","getTokenFromLocalStorage","localStorage","getItem","token","validateToken","fetch","method","headers","authorization","then","response","Ok","json","Error","data","setLogin","setUsername","username","App","Provider","value","login","children","index","element","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["C:/Users/Adrian/Desktop/todo list-react/client/src/App.js"],"sourcesContent":["import './styles/App.css';\nimport './styles/LoginPage.css' \nimport { Route, Routes, Link } from 'react-router-dom';\nimport { IndexPage, RegisterPage, LoginPage } from './Pages';\nimport { UserContext } from './context/UserContext';\nimport { useState } from 'react';\n\nfunction getTokenFromLocalStorage() {\n  return localStorage.getItem('token');\n}\n\nconst token=getTokenFromLocalStorage()\n\nfunction validateToken(){\n  fetch(\"http://localhost:4000/validateToken\", {\n    method: \"POST\",\n    headers: {\n      authorization: token\n    }\n  })\n  .then(response =>{\n    if(response.Ok){\n      return response.json()\n    }else{\n      throw new Error(\"token validation failed\")\n    }\n  })\n  .then(data =>{\n    setLogin(data.authorization)\n    setUsername(data.username)\n  })\n}\n\nvalidateToken()\n\n\nfunction App() {\n  \n\n  return (\n    <UserContext.Provider value={{login, setLogin, username,setUsername}}>\n      <Routes>\n        <Route index element={<IndexPage/>}/>\n        <Route path=\"/Register\" element={<RegisterPage/>}/>\n        <Route path=\"/Login\" element={<LoginPage/>}/>\n      </Routes>\n    </UserContext.Provider>\n\n\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,kBAAkB;AACzB,OAAO,wBAAwB;AAC/B,SAASA,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AACtD,SAASC,SAAS,EAAEC,YAAY,EAAEC,SAAS,QAAQ,SAAS;AAC5D,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,wBAAwBA,CAAA,EAAG;EAClC,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACtC;AAEA,MAAMC,KAAK,GAACH,wBAAwB,CAAC,CAAC;AAEtC,SAASI,aAAaA,CAAA,EAAE;EACtBC,KAAK,CAAC,qCAAqC,EAAE;IAC3CC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,aAAa,EAAEL;IACjB;EACF,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAG;IACf,IAAGA,QAAQ,CAACC,EAAE,EAAC;MACb,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,MAAI;MACH,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;EACF,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAG;IACXC,QAAQ,CAACD,IAAI,CAACN,aAAa,CAAC;IAC5BQ,WAAW,CAACF,IAAI,CAACG,QAAQ,CAAC;EAC5B,CAAC,CAAC;AACJ;AAEAb,aAAa,CAAC,CAAC;AAGf,SAASc,GAAGA,CAAA,EAAG;EAGb,oBACEnB,OAAA,CAACH,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAACC,KAAK;MAAEN,QAAQ;MAAEE,QAAQ;MAACD;IAAW,CAAE;IAAAM,QAAA,eACnEvB,OAAA,CAACR,MAAM;MAAA+B,QAAA,gBACLvB,OAAA,CAACT,KAAK;QAACiC,KAAK;QAACC,OAAO,eAAEzB,OAAA,CAACN,SAAS;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACrC7B,OAAA,CAACT,KAAK;QAACuC,IAAI,EAAC,WAAW;QAACL,OAAO,eAAEzB,OAAA,CAACL,YAAY;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnD7B,OAAA,CAACT,KAAK;QAACuC,IAAI,EAAC,QAAQ;QAACL,OAAO,eAAEzB,OAAA,CAACJ,SAAS;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAI3B;AAACE,EAAA,GAdQZ,GAAG;AAgBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}